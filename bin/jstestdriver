#!/usr/bin/env node

var forever = require('forever')
  , fs = require('fs')
  , path = require('path')
  , exec = require('child_process').exec
  , spawn = require('child_process').spawn
  , _ = require('underscore')
  , lib = path.join(__dirname, './../lib')



var load_config = function(name, next) {
    fs.readFile(name, 'utf-8', function(err, data) {
        if(err) throw err
        next(data)
    })
}



var log = function(process) {
    process.stdout.setEncoding('utf8')
    process.stdout.on('data', function(data) { console.log(data) })
}



switch(process.argv[2]) {
    case 'start':
        var config

        if(_.contains(process.argv, '--config')) {
            config = process.argv[ _.indexOf(process.argv, '--config') + 1 ]
        }
        else {
            config = './jsTestDriver.conf'
        }

        load_config(config, function(data) {
            port = data.match(/^server\:(\w+)\:(\d+)/i)
            var server = spawn('forever', [ 'start', path.join(lib, 'start_server.js'), 3232 ])
            log(server)
        })

        break
    case 'stop':
        exec('forever stopall')
        break
    case 'run':
        var tests = spawn('java', [ '-jar', path.join(lib, 'jstestdriver.jar'), '--tests', 'all', '--reset' ].concat(_.rest(process.argv, 3)))
        log(tests)
        break
    default:
        var command = spawn('java', [ '-jar', path.join(lib, 'jstestdriver.jar') ].concat(_.rest(process.argv, 3)))
        log(command)
        break
}
